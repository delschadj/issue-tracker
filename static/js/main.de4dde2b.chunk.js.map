{"version":3,"sources":["theme.js","firebase.js","context/AuthContext.js","scenes/team/AddTeam.jsx","scenes/team/index.jsx","components/Authentication/Login.jsx","components/Authentication/Signup.jsx","scenes/issues/AddIsssue.jsx","scenes/projects/AddProject.jsx","App.js","index.js"],"names":["tokens","mode","grey","primary","greenAccent","redAccent","blueAccent","ColorModeContext","createContext","toggleColorMode","useMode","useState","setMode","colorMode","useMemo","prev","createTheme","colors","palette","main","secondary","neutral","dark","light","background","default","typography","fontFamily","join","fontSize","h1","h2","h3","h4","h5","h6","themeSettings","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","users_colRef","getStorage","getAuth","collection","questionsColRef","answersColRef","issuesColRef","projectsColRef","onSnapshot","snapshot","users","docs","forEach","user","push","data","id","questions","question","answers","answer","issues","issue","projects","project","UserContext","UserAuth","useContext","yup","shape","full_name","required","username","email","role","Index","Copyright","props","Typography","variant","color","align","href","Date","getFullYear","theme","SignIn","setError","signIn","navigate","useNavigate","handleSubmit","event","preventDefault","FormData","currentTarget","get","message","console","log","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","onSubmit","noValidate","mt","TextField","margin","fullWidth","label","name","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","value","Button","mb","Grid","container","item","description","priority","title","App","setEmailApp","currentUser","setCurrentUser","auth","useEffect","onAuthStateChanged","undefined","Provider","className","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.de4dde2b.chunk.js","sourcesContent":["import { createContext, useState, useMemo } from \"react\";\r\nimport { createTheme } from \"@mui/material/styles\";\r\n\r\n// color design tokens export\r\nexport const tokens = (mode) => ({\r\n  ...(mode === \"dark\"\r\n    ? {\r\n        grey: {\r\n          100: \"#e0e0e0\",\r\n          200: \"#c2c2c2\",\r\n          300: \"#a3a3a3\",\r\n          400: \"#858585\",\r\n          500: \"#666666\",\r\n          600: \"#525252\",\r\n          700: \"#3d3d3d\",\r\n          800: \"#292929\",\r\n          900: \"#141414\",\r\n        },\r\n        primary: {\r\n          100: \"#d0d1d5\",\r\n          200: \"#a1a4ab\",\r\n          300: \"#727681\",\r\n          400: \"#1F2A40\",\r\n          500: \"#141b2d\",\r\n          600: \"#101624\",\r\n          700: \"#0c101b\",\r\n          800: \"#080b12\",\r\n          900: \"#040509\",\r\n        },\r\n        greenAccent: {\r\n          100: \"#dbf5ee\",\r\n          200: \"#b7ebde\",\r\n          300: \"#94e2cd\",\r\n          400: \"#70d8bd\",\r\n          500: \"#4cceac\",\r\n          600: \"#3da58a\",\r\n          700: \"#2e7c67\",\r\n          800: \"#1e5245\",\r\n          900: \"#0f2922\",\r\n        },\r\n        redAccent: {\r\n          100: \"#f8dcdb\",\r\n          200: \"#f1b9b7\",\r\n          300: \"#e99592\",\r\n          400: \"#e2726e\",\r\n          500: \"#db4f4a\",\r\n          600: \"#af3f3b\",\r\n          700: \"#832f2c\",\r\n          800: \"#58201e\",\r\n          900: \"#2c100f\",\r\n        },\r\n        blueAccent: {\r\n          100: \"#e1e2fe\",\r\n          200: \"#c3c6fd\",\r\n          300: \"#a4a9fc\",\r\n          400: \"#868dfb\",\r\n          500: \"#6870fa\",\r\n          600: \"#535ac8\",\r\n          700: \"#3e4396\",\r\n          800: \"#2a2d64\",\r\n          900: \"#151632\",\r\n        },\r\n      }\r\n    : {\r\n        grey: {\r\n          100: \"#141414\",\r\n          200: \"#292929\",\r\n          300: \"#3d3d3d\",\r\n          400: \"#525252\",\r\n          500: \"#666666\",\r\n          600: \"#858585\",\r\n          700: \"#a3a3a3\",\r\n          800: \"#c2c2c2\",\r\n          900: \"#e0e0e0\",\r\n        },\r\n        primary: {\r\n          100: \"#040509\",\r\n          200: \"#080b12\",\r\n          300: \"#0c101b\",\r\n          400: \"#f2f0f0\",\r\n          500: \"#141b2d\",\r\n          600: \"#1F2A40\",\r\n          700: \"#727681\",\r\n          800: \"#a1a4ab\",\r\n          900: \"#d0d1d5\",\r\n        },\r\n        greenAccent: {\r\n          100: \"#0f2922\",\r\n          200: \"#1e5245\",\r\n          300: \"#2e7c67\",\r\n          400: \"#3da58a\",\r\n          500: \"#4cceac\",\r\n          600: \"#70d8bd\",\r\n          700: \"#94e2cd\",\r\n          800: \"#b7ebde\",\r\n          900: \"#dbf5ee\",\r\n        },\r\n        redAccent: {\r\n          100: \"#2c100f\",\r\n          200: \"#58201e\",\r\n          300: \"#832f2c\",\r\n          400: \"#af3f3b\",\r\n          500: \"#db4f4a\",\r\n          600: \"#e2726e\",\r\n          700: \"#e99592\",\r\n          800: \"#f1b9b7\",\r\n          900: \"#f8dcdb\",\r\n        },\r\n        blueAccent: {\r\n          100: \"#151632\",\r\n          200: \"#2a2d64\",\r\n          300: \"#3e4396\",\r\n          400: \"#535ac8\",\r\n          500: \"#6870fa\",\r\n          600: \"#868dfb\",\r\n          700: \"#a4a9fc\",\r\n          800: \"#c3c6fd\",\r\n          900: \"#e1e2fe\",\r\n        },\r\n      }),\r\n});\r\n\r\n// mui theme settings\r\nexport const themeSettings = (mode) => {\r\n  const colors = tokens(mode);\r\n  return {\r\n    palette: {\r\n      mode: mode,\r\n      ...(mode === \"dark\"\r\n        ? {\r\n            // palette values for dark mode\r\n            primary: {\r\n              main: colors.primary[500],\r\n            },\r\n            secondary: {\r\n              main: colors.greenAccent[500],\r\n            },\r\n            neutral: {\r\n              dark: colors.grey[700],\r\n              main: colors.grey[500],\r\n              light: colors.grey[100],\r\n            },\r\n            background: {\r\n              default: colors.primary[500],\r\n            },\r\n          }\r\n        : {\r\n            // palette values for light mode\r\n            primary: {\r\n              main: colors.primary[100],\r\n            },\r\n            secondary: {\r\n              main: colors.greenAccent[500],\r\n            },\r\n            neutral: {\r\n              dark: colors.grey[700],\r\n              main: colors.grey[500],\r\n              light: colors.grey[100],\r\n            },\r\n            background: {\r\n              default: \"#fcfcfc\",\r\n            },\r\n          }),\r\n    },\r\n    typography: {\r\n      fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n      fontSize: 12,\r\n      h1: {\r\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 40,\r\n      },\r\n      h2: {\r\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 32,\r\n      },\r\n      h3: {\r\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 24,\r\n      },\r\n      h4: {\r\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 20,\r\n      },\r\n      h5: {\r\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 16,\r\n      },\r\n      h6: {\r\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 14,\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\n// context for color mode\r\nexport const ColorModeContext = createContext({\r\n  toggleColorMode: () => {},\r\n});\r\n\r\nexport const useMode = () => {\r\n  const [mode, setMode] = useState(\"light\");\r\n\r\n  const colorMode = useMemo(\r\n    () => ({\r\n      toggleColorMode: () =>\r\n        setMode((prev) => (prev === \"light\" ? \"dark\" : \"light\")),\r\n    }),\r\n    []\r\n  );\r\n\r\n  const theme = useMemo(() => createTheme(themeSettings(mode)), [mode]);\r\n  return [theme, colorMode];\r\n};","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\n\r\n// Database\r\nimport {\r\n  collection, getFirestore, onSnapshot,\r\n  addDoc, deleteDoc, doc\r\n} from \"firebase/firestore\"\r\n\r\nimport { getAuth, updateProfile } from \"firebase/auth\";\r\n\r\nimport { getDownloadURL, getStorage, ref, uploadBytes } from \"firebase/storage\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyD-trIS-MF3W4czewjN9nGqy6YrID-9O6M\",\r\n  authDomain: \"divine2-d279b.firebaseapp.com\",\r\n  projectId: \"divine2-d279b\",\r\n  storageBucket: \"divine2-d279b.appspot.com\",\r\n  messagingSenderId: \"151045482950\",\r\n  appId: \"1:151045482950:web:05cfabae8d02b89760eac7\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore (app)\r\n\r\nconst storage = getStorage();\r\nconst currentUser = getAuth ();\r\n\r\n// collection refs\r\nconst users_colRef = collection (db, \"users\")\r\nconst questionsColRef = collection (db, \"questions\")\r\nconst answersColRef = collection (db, \"answers\")\r\nconst issuesColRef = collection (db, \"issues\")\r\nconst projectsColRef = collection (db, \"projects\")\r\n\r\n// realtime databases\r\nonSnapshot (users_colRef, (snapshot) => {\r\n  let users = []\r\n  snapshot.docs.forEach (user => {\r\n    users.push ({ ...user.data(), id: user.id})\r\n  })\r\n})\r\n\r\nonSnapshot (questionsColRef, (snapshot) => {\r\n  let questions = []\r\n  snapshot.docs.forEach (question => {\r\n    questions.push ({ ...question.data(), id: question.id})\r\n  })\r\n})\r\n\r\nonSnapshot (answersColRef, (snapshot) => {\r\n  let answers = []\r\n  snapshot.docs.forEach (answer => {\r\n    answers.push ({ ...answer.data(), id: answer.id})\r\n  })\r\n})\r\n\r\nonSnapshot (issuesColRef, (snapshot) => {\r\n  let issues = []\r\n  snapshot.docs.forEach (issue => {\r\n    issues.push ({ ...issue.data(), id: issue.id})\r\n  })\r\n})\r\n\r\nonSnapshot (projectsColRef, (snapshot) => {\r\n  let projects = []\r\n  snapshot.docs.forEach (project => {\r\n    projects.push ({ ...project.data(), id: project.id})\r\n  })\r\n})\r\n\r\n\r\n// Storage +Upload\r\nexport async function upload (file, currentUser, setLoading ) {\r\n  const fileRef = ref (storage, currentUser.uid + \".png\")\r\n\r\n  setLoading (true);\r\n\r\n  const snapshot = await uploadBytes (fileRef, file)\r\n  const photoURL = await getDownloadURL(fileRef)\r\n\r\n  updateProfile (currentUser, {photoURL: photoURL})\r\n\r\n  setLoading (false)\r\n  alert (\"Uploaded\")\r\n}\r\n\r\n\r\nexport const auth = getAuth(app);\r\nexport { db, users_colRef, questionsColRef, answersColRef, storage, issuesColRef, projectsColRef}\r\n\r\nexport default app","import { createContext, useContext, useEffect, useState } from 'react';\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  sendEmailVerification,\r\n  updateProfile,\r\n  signOut,\r\n  onAuthStateChanged,\r\n} from 'firebase/auth';\r\nimport { auth } from '../firebase.js';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const [user, setUser] = useState({});\r\n\r\n  const createUser = async (name, email, password) => {\r\n    try {\r\n      await createUserWithEmailAndPassword(auth, email, password).catch((err) =>\r\n        console.log(err)\r\n      );\r\n      await sendEmailVerification(auth.currentUser).catch((err) =>\r\n        console.log(err)\r\n      );\r\n      await updateProfile(auth.currentUser, { displayName: name }).catch(\r\n        (err) => console.log(err)\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n   const signIn = (email, full_name, username, religion, password) =>  {\r\n    return signInWithEmailAndPassword(auth, email, full_name, username, religion, password)\r\n   }\r\n\r\n  const logout = () => {\r\n      return signOut(auth)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\r\n      setUser(currentUser);\r\n    });\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <UserContext.Provider value={{ createUser, user, logout, signIn }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport const UserAuth = () => {\r\n  return useContext(UserContext);\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { addDoc, onSnapshot, collection, query, where } from \"firebase/firestore\";\r\n\r\nimport { Box, Button, TextField } from \"@mui/material\";\r\nimport { Field, Form, Formik, FormikProps, useField } from 'formik';\r\nimport Select from 'react-select'\r\nimport * as yup from \"yup\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport Header from \"../../components/Header\";\r\n\r\nimport { users_colRef } from '../../firebase';\r\nimport {UserAuth} from \"../../context/AuthContext\"\r\n\r\nconst AddTeam = ({button}) => {\r\n  const isNonMobile = useMediaQuery(\"(min-width:600px)\");\r\n  const [users, setUsers] = useState (\"\")\r\n\r\n  const [error, setError] = useState (\"\")\r\n  const {createUser} = UserAuth();\r\n\r\n  const options = [\r\n    { value: 'Developer', label: 'Developer' },\r\n    { value: 'Project Manager', label: 'Project Manager' },\r\n    { value: 'Admin', label: 'Admin' }\r\n  ]\r\n\r\n  // Get all users\r\n  useEffect(() => {\r\n    onSnapshot (users_colRef, (snapshot) => {\r\n      let allUsers = []\r\n      snapshot.docs.forEach (user => {\r\n        allUsers.push ({ ...user.data(), id: user.id})\r\n      })\r\n  \r\n      setUsers (allUsers)\r\n  \r\n    })\r\n\r\n    \r\n  }, [users_colRef]);\r\n\r\n  const handleFormSubmit = async (values) => {\r\n\r\n    const docAdd = { \r\n      full_name: values.full_name,\r\n      email: values.email,\r\n      role: values.role,\r\n     }\r\n\r\n    console.log(docAdd);\r\n\r\n    await createUser (values.username, values.email, values.password)\r\n    addDoc(users_colRef, docAdd)\r\n    alert (\"Succesfully added!\")\r\n  };\r\n\r\n\r\n  return (\r\n    <Box m=\"50px\">\r\n      <Header title=\"CREATE USER\" subtitle=\"Create a New User Profile\" />\r\n\r\n      <Formik\r\n        onSubmit={(values, { resetForm }) => {\r\n\r\n          handleFormSubmit (values);\r\n          resetForm();\r\n    \r\n    }}\r\n        initialValues={initialValues}\r\n        validationSchema={checkoutSchema}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleBlur,\r\n          handleChange,\r\n          handleSubmit,\r\n        }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <Box\r\n              display=\"grid\"\r\n              gap=\"30px\"\r\n              gridTemplateColumns=\"repeat(4, minmax(0, 1fr))\"\r\n              sx={{\r\n                \"& > div\": { gridColumn: isNonMobile ? undefined : \"span 4\" },\r\n              }}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                variant=\"filled\"\r\n                type=\"text\"\r\n                label=\"Full name\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.full_name}\r\n                name=\"full_name\"\r\n                error={!!touched.full_name && !!errors.full_name}\r\n                helperText={touched.full_name && errors.full_name}\r\n                sx={{ gridColumn: \"span 4\" }}\r\n              />\r\n\r\n              <TextField\r\n                fullWidth\r\n                variant=\"filled\"\r\n                type=\"username\"\r\n                label=\"Username\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.username}\r\n                name=\"username\"\r\n                error={!!touched.username && !!errors.username}\r\n                helperText={touched.username && errors.username}\r\n                sx={{ gridColumn: \"span 4\" }}\r\n              />\r\n              \r\n              <TextField\r\n                fullWidth\r\n                variant=\"filled\"\r\n                type=\"text\"\r\n                label=\"Email\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.email}\r\n                name=\"email\"\r\n                error={!!touched.email && !!errors.email}\r\n                helperText={touched.email && errors.email}\r\n                sx={{ gridColumn: \"span 4\" }}\r\n              />\r\n              \r\n              <TextField\r\n                fullWidth\r\n                variant=\"filled\"\r\n                type=\"password\"\r\n                label=\"Password\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.password}\r\n                name=\"password\"\r\n                error={!!touched.password && !!errors.password}\r\n                helperText={touched.password && errors.password}\r\n                sx={{ gridColumn: \"span 4\" }}\r\n              />\r\n\r\n\r\n              <div>\r\n                <h2> Role </h2>\r\n                <Field as=\"select\" name=\"role\">\r\n                  <option value=\"Admin\"> Admin </option>\r\n                  <option value=\"Project Manager\"> Project Manager </option>\r\n                  <option value=\"Developer\"> Developer </option>\r\n                </Field>\r\n              </div>\r\n\r\n            </Box>\r\n            <Box display=\"flex\" justifyContent=\"end\" mt=\"20px\">\r\n              <Button type=\"submit\" variant=\"contained\">\r\n                Create New User\r\n              </Button>\r\n            </Box>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n\r\n      {button}\r\n      \r\n    </Box>\r\n  );\r\n};\r\n\r\nconst checkoutSchema = yup.object().shape({\r\n  full_name: yup.string().required(\"required\"),\r\n  username: yup.string().required(\"required\"),\r\n  email: yup.string().email(\"invalid email\").required(\"required\"),\r\n  role: yup.string().required(\"required\"),\r\n});\r\nconst initialValues = {\r\n  username: \"\",\r\n  full_name: \"\",\r\n  email: \"\",\r\n  role: \"\",\r\n};\r\n\r\nexport default AddTeam;","import React, { useEffect, useState } from \"react\";\r\nimport AddTeam from \"./AddTeam.jsx\";\r\nimport CurrentTeam from \"./CurrentTeam.jsx\";\r\n\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport { Button } from \"@mui/material\";\r\n\r\nimport {UserAuth} from \"../../context/AuthContext\"\r\nimport { users_colRef } from '../../firebase';\r\nimport { getDocs, onSnapshot, collection, query, where } from \"firebase/firestore\";\r\n\r\n\r\nfunction Index() {\r\n  const [currentUser, setCurrentUser] = useState ({})\r\n  const {user, logout} = UserAuth()\r\n\r\n  const [addTeam, setTeam] = useState(false);\r\n\r\n  function showAddTeam() {\r\n    setTeam(true);\r\n  }\r\n\r\n  function showCurrentTeam() {\r\n    setTeam(false);\r\n  }\r\n\r\n  // Get current user once\r\n  useEffect(()=> {\r\n    \r\n    const loadRabbit = async () => {\r\n      const q = query(users_colRef, where(\"email\", \"==\", user.email));\r\n\r\n      const querySnapshot = await getDocs(q);\r\n      querySnapshot.forEach((doc) => {\r\n        // doc.data() is never undefined for query doc snapshots\r\n        setCurrentUser (doc.data())\r\n        \r\n      });\r\n    }\r\n\r\n    loadRabbit();\r\n    \r\n  }, [user]);\r\n\r\n  return (\r\n    <div className=\"Issues\">\r\n      <div className=\"grey-card-contianer\">\r\n        {addTeam ? \r\n        <>\r\n          <AddTeam \r\n            button={\r\n            <Button onClick={() => showCurrentTeam()} \r\n              type=\"submit\" variant=\"contained\"> \r\n              <ArrowBackIcon/>  Back to current Team\r\n            </Button >\r\n            }/> \r\n        </>\r\n        \r\n        : \r\n\r\n        <>\r\n          <CurrentTeam \r\n            button={\r\n            <Button style={{ marginTop: \"3vh\" }} onClick={() => showAddTeam()} \r\n              type=\"submit\" variant=\"contained\"> \r\n                Add Team Member \r\n            </Button >}/>\r\n        </>\r\n         }\r\n      </div>      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Index;","import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { UserAuth } from '../../context/AuthContext';\r\n\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://mui.com/\">\r\n        Delschad Jankir\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function SignIn() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  \r\n  const { signIn } = UserAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n\r\n    setError('')\r\n    try {\r\n      await signIn(data.get('email'), data.get('password'))\r\n      navigate('/home')\r\n    } catch (e) {\r\n      setError(e.message)\r\n      console.log(e.message)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item>\r\n                <Link href=\"/signup\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n        <Copyright sx={{ mt: 8, mb: 4 }} />\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\r\n\r\nimport { users_colRef } from '../../firebase.js';\r\nimport { addDoc } from \"firebase/firestore\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {UserAuth} from \"../../context/AuthContext\"\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://mui.com/\">\r\n        Delschad Jankir\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function SignUp() {\r\n  const [role, setRole] = useState (\"Developer\")\r\n  const [error, setError] = useState (\"\")\r\n  const {createUser} = UserAuth();\r\n  const navigate = useNavigate ();\r\n\r\n  const handleChange = (event) => {\r\n    setRole(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setError(\"\")\r\n    const data = new FormData(event.currentTarget);\r\n\r\n    try{\r\n      const docAdd = ({ \r\n        full_name: data.get('full_name'),\r\n        username: data.get('username'),\r\n        email: data.get('email'),\r\n        role: role,\r\n       })\r\n\r\n       addDoc(users_colRef, docAdd)\r\n       await createUser (\r\n        data.get('username'), \r\n        data.get('email'), \r\n        data.get('password')\r\n       )\r\n       navigate (\"/home\")\r\n       \r\n      \r\n    }\r\n    catch (e) {\r\n      console.log (e.message)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  autoComplete=\"full_name\"\r\n                  name=\"full_name\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"full_name\"\r\n                  label=\"Full Name\"\r\n                  autoFocus\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"username\"\r\n                  label=\"Username\"\r\n                  name=\"username\"\r\n                  autoComplete=\"username\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"new-password\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"role\">Role</InputLabel>\r\n                <Select\r\n                  labelId=\"role\"\r\n                  id=\"role\"\r\n                  value={role}\r\n                  label=\"role\"\r\n                  onChange={handleChange}\r\n                >\r\n                  <MenuItem value={\"Developer\"}>Developer</MenuItem>\r\n                  <MenuItem value={\"Project Manager\"}>Project Manager</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n\r\n              </Grid>\r\n              \r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"/login\" variant=\"body2\">\r\n                  Already have an account? Sign in\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n        <Copyright sx={{ mt: 5 }} />\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport Multiselect from 'multiselect-react-dropdown';\r\n\r\nimport {UserAuth} from \"../../context/AuthContext\"\r\nimport { projectsColRef ,issuesColRef, users_colRef } from '../../firebase';\r\nimport { addDoc, onSnapshot, collection, query, where } from \"firebase/firestore\";\r\n\r\nimport { Box, Button, TextField } from \"@mui/material\";\r\nimport { Field, Form, Formik, FormikProps, useField } from 'formik';\r\nimport Select from 'react-select'\r\nimport * as yup from \"yup\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport Header from \"../../components/Header\";\r\n\r\nconst AddIssue = ({button}) => {\r\n  const isNonMobile = useMediaQuery(\"(min-width:600px)\");\r\n  const [users, setUsers] = useState (\"\")\r\n  const [developers, setDevs] = useState ()\r\n  const [projects, setProjects] = useState ()\r\n  const options = [\r\n    { value: 'Low', label: 'Low' },\r\n    { value: 'Medium', label: 'Medium' },\r\n    { value: 'High', label: 'High' }\r\n  ]\r\n\r\n  // Get all users\r\n  useEffect(() => {\r\n    onSnapshot (users_colRef, (snapshot) => {\r\n      let allUsers = []\r\n      snapshot.docs.forEach (user => {\r\n        allUsers.push ({ ...user.data(), id: user.id})\r\n      })\r\n  \r\n      setUsers (allUsers)\r\n  \r\n    })\r\n    \r\n  }, [users_colRef]);\r\n  \r\n  // Get all developers\r\n  const qDev = query(users_colRef, where(\"role\", \"==\", \"Developer\"));\r\n  useEffect(() => {\r\n    onSnapshot (qDev, (snapshot) => {\r\n      let allDevelopers = []\r\n      snapshot.docs.forEach (dev => {\r\n        allDevelopers.push (dev.data().full_name)\r\n        \r\n        \r\n      })\r\n  \r\n      setDevs (allDevelopers)\r\n\r\n    })\r\n \r\n  }, [users_colRef]);\r\n\r\n  // Get all projects\r\n  useEffect(() => {\r\n    onSnapshot (projectsColRef, (snapshot) => {\r\n      let allProjects = []\r\n      snapshot.docs.forEach (project => {\r\n        allProjects.push (project.data().title)\r\n        \r\n        \r\n      })\r\n  \r\n      setProjects (allProjects)\r\n\r\n    })\r\n \r\n  }, [projectsColRef]);\r\n\r\n\r\n\r\n  const handleFormSubmit = async (values) => {\r\n\r\n    const docAdd = { \r\n      description: values.description,\r\n      project: values.project,\r\n      assignTo: values.assignTo,\r\n      priority: values.priority,\r\n     }\r\n\r\n    console.log(docAdd);\r\n\r\n    await addDoc(issuesColRef, docAdd)\r\n    alert (\"Succesfully added!\")\r\n  };\r\n\r\n\r\n  return (\r\n    <Box m=\"50px\">\r\n      <Header title=\"CREATE ISSUE\" subtitle=\"Create a New Issue/Ticket\" />\r\n\r\n      <Formik\r\n        onSubmit={(values, { resetForm }) => {\r\n\r\n          handleFormSubmit (values);\r\n          resetForm();\r\n    \r\n    }}\r\n        initialValues={initialValues}\r\n        validationSchema={checkoutSchema}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleBlur,\r\n          handleChange,\r\n          handleSubmit,\r\n        }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <Box\r\n              display=\"grid\"\r\n              gap=\"30px\"\r\n              gridTemplateColumns=\"repeat(4, minmax(0, 1fr))\"\r\n              sx={{\r\n                \"& > div\": { gridColumn: isNonMobile ? undefined : \"span 4\" },\r\n              }}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                variant=\"filled\"\r\n                type=\"text\"\r\n                label=\"Description\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.description}\r\n                name=\"description\"\r\n                error={!!touched.description && !!errors.description}\r\n                helperText={touched.description && errors.description}\r\n                sx={{ gridColumn: \"span 4\" }}\r\n              />\r\n\r\n              <div id=\"checkbox-group\">\r\n                <h2> Project </h2>\r\n                <Field as=\"select\" name=\"project\">\r\n                    {projects && projects.map(function(project, index){\r\n                          return <option value={project}> {project} </option>;\r\n                        })}\r\n                </Field>\r\n              </div>\r\n\r\n              \r\n\r\n              <div>\r\n                <h2> Priority </h2>\r\n                <Field as=\"select\" name=\"priority\">\r\n                  <option value=\"Low\"> Low </option>\r\n                  <option value=\"Medium\"> Medium </option>\r\n                  <option value=\"High\"> High </option>\r\n                </Field>\r\n              </div>\r\n\r\n              <div id=\"checkbox-group\">\r\n                <h2> Assign To </h2>\r\n                <div role=\"group\" aria-labelledby=\"checkbox-group\">\r\n                    {developers && developers.map(function(name, index){\r\n                          return <label> <Field type=\"checkbox\" name=\"assignTo\" value={name} /> {name} </label> ;\r\n                        })}\r\n                </div>\r\n              </div>\r\n\r\n            </Box>\r\n            <Box display=\"flex\" justifyContent=\"end\" mt=\"20px\">\r\n              <Button type=\"submit\" variant=\"contained\">\r\n                Add Issue\r\n              </Button>\r\n            </Box>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n\r\n    {button}\r\n\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst checkoutSchema = yup.object().shape({\r\n  description: yup.string().required(\"required\"),\r\n  project: yup.string().required(\"required\"),\r\n  priority: yup.string().required(\"required\"),\r\n});\r\nconst initialValues = {\r\n  description: \"\",\r\n  project: \"\",\r\n  assignTo: \"\",\r\n  priority: \"Low\",\r\n};\r\n\r\nexport default AddIssue;","import React, { useEffect, useState } from \"react\";\r\nimport Select from 'react-select'\r\nimport Multiselect from 'multiselect-react-dropdown';\r\n\r\nimport {UserAuth} from \"../../context/AuthContext\"\r\nimport { projectsColRef, users_colRef } from '../../firebase';\r\nimport { addDoc, onSnapshot, collection, query, where } from \"firebase/firestore\";\r\n\r\nimport { Box, Button, TextField } from \"@mui/material\";\r\nimport { Field, Form, Formik, FormikProps, useField } from 'formik';\r\nimport * as yup from \"yup\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport Header from \"../../components/Header\";\r\nimport { async } from \"@firebase/util\";\r\n\r\nfunction AddProject({button}) {\r\n\r\n  const isNonMobile = useMediaQuery(\"(min-width:600px)\");\r\n  const [users, setUsers] = useState (\"\")\r\n  const [developers, setDevs] = useState ()\r\n  const options = [\r\n    { value: 'Low', label: 'Low' },\r\n    { value: 'Medium', label: 'Medium' },\r\n    { value: 'High', label: 'High' }\r\n  ]\r\n\r\n  const [projectManagers, setProjectManagers] = useState ([])\r\n  \r\n  const [title, setTitle] = useState (\"\")\r\n  const [description, setDescription] = useState (\"\")\r\n\r\n  const [assignTo, setAssignTo] = useState ([])\r\n  const [priority, setPriority] = useState (\"\")\r\n\r\n  const [error, setError] = useState (\"\");\r\n\r\n  const [currentUser, setCurrentUser] = useState ({})\r\n  const {user, logout} = UserAuth()\r\n  const [mail, setMail] = useState(user.email)\r\n\r\n  // Get current user\r\n  useEffect(()=> {\r\n    setMail (user.email)\r\n    \r\n    const loadRabbit = async () => {\r\n      const q = query(users_colRef, where(\"email\", \"==\", mail));\r\n\r\n      const unsubscribe = onSnapshot (q, (snapshot) => {\r\n        const currentUserArray = []\r\n        snapshot.docs.forEach (doc => {\r\n          currentUserArray.push ({ ...doc.data(), id: doc.id})\r\n        });\r\n    \r\n        setCurrentUser (currentUserArray[0])\r\n    \r\n        unsubscribe();\r\n      })\r\n    }\r\n\r\n    loadRabbit();\r\n    \r\n  }, [mail]);\r\n\r\n\r\n  // Get all users\r\n  useEffect(() => {\r\n    onSnapshot (users_colRef, (snapshot) => {\r\n      let allUsers = []\r\n      snapshot.docs.forEach (user => {\r\n        allUsers.push ({ ...user.data(), id: user.id})\r\n      })\r\n  \r\n      setUsers (allUsers)\r\n  \r\n    })\r\n\r\n    \r\n  }, [users_colRef]);\r\n\r\n  // Get all PMs\r\n  const qPM = query(users_colRef, where(\"role\", \"==\", \"Project Manager\"));\r\n  useEffect(() => {\r\n    onSnapshot (qPM, (snapshot) => {\r\n      let allPMs = []\r\n      snapshot.docs.forEach (dev => {\r\n        allPMs.push (dev.data().full_name)\r\n        \r\n        \r\n      })\r\n  \r\n      setProjectManagers (allPMs)\r\n\r\n    })\r\n \r\n  }, [users_colRef]);\r\n  \r\n  // Get all developers\r\n  const qDev = query(users_colRef, where(\"role\", \"==\", \"Developer\"));\r\n  useEffect(() => {\r\n    onSnapshot (qDev, (snapshot) => {\r\n      let allDevelopers = []\r\n      snapshot.docs.forEach (dev => {\r\n        allDevelopers.push (dev.data().full_name)\r\n        \r\n        \r\n      })\r\n  \r\n      setDevs (allDevelopers)\r\n\r\n    })\r\n \r\n  }, [users_colRef]);\r\n\r\n\r\n\r\n  const handleFormSubmit = async (values) => {\r\n\r\n    const docAdd = { \r\n      title: values.title,\r\n      description: values.description,\r\n      projectManager: values.projectManager,\r\n      developers: values.developers,\r\n      priority: values.priority,\r\n     }\r\n\r\n    console.log(docAdd);\r\n\r\n    await addDoc(projectsColRef, docAdd)\r\n    alert (\"Succesfully added!\")\r\n  };\r\n  \r\n\r\n\r\n  return (\r\n    <>\r\n    {currentUser && currentUser.role === \"Admin\" && developers && \r\n\r\n    <Box m=\"20px\">\r\n    <Header title=\"CREATE PROJECT\" subtitle=\"Create a New Project\" />\r\n\r\n    <Formik\r\n      onSubmit={(values, { resetForm }) => {\r\n\r\n        handleFormSubmit (values);\r\n        resetForm();\r\n  \r\n  }}\r\n      initialValues={initialValues}\r\n      validationSchema={checkoutSchema}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleBlur,\r\n        handleChange,\r\n        handleSubmit,\r\n      }) => (\r\n        <form onSubmit={handleSubmit}>\r\n          <Box\r\n            display=\"grid\"\r\n            gap=\"30px\"\r\n            gridTemplateColumns=\"repeat(4, minmax(0, 1fr))\"\r\n            sx={{\r\n              \"& > div\": { gridColumn: isNonMobile ? undefined : \"span 4\" },\r\n            }}\r\n          >\r\n            <TextField\r\n              fullWidth\r\n              variant=\"filled\"\r\n              type=\"text\"\r\n              label=\"Title\"\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              value={values.title}\r\n              name=\"title\"\r\n              error={!!touched.title && !!errors.title}\r\n              helperText={touched.title && errors.title}\r\n              sx={{ gridColumn: \"span 4\" }}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              variant=\"filled\"\r\n              type=\"text\"\r\n              label=\"Description\"\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              value={values.description}\r\n              name=\"description\"\r\n              error={!!touched.description && !!errors.description}\r\n              helperText={touched.description && errors.description}\r\n              sx={{ gridColumn: \"span 4\" }}\r\n            />\r\n        \r\n\r\n        <div id=\"checkbox-group\">\r\n          <h2> Developers </h2>\r\n          <div role=\"group\" aria-labelledby=\"checkbox-group\">\r\n              {developers.map(function(name, index){\r\n                    return <label> <Field type=\"checkbox\" name=\"developers\" value={name} /> {name} </label> ;\r\n                  })}\r\n          </div>\r\n        </div>\r\n          \r\n\r\n        <div id=\"checkbox-group\">\r\n          <h2> Project Manager </h2>\r\n          <Field as=\"select\" name=\"projectManager\">\r\n              {projectManagers.map(function(projectManager, index){\r\n                    return <option value={projectManager}> {projectManager} </option>;\r\n                  })}\r\n          </Field>\r\n        </div>\r\n          \r\n        \r\n        <div>\r\n            <h2> Priority </h2>\r\n            <Field as=\"select\" name=\"priority\">\r\n             <option value=\"Low\"> Low </option>\r\n             <option value=\"Medium\"> Medium </option>\r\n             <option value=\"High\"> High </option>\r\n           </Field>\r\n        </div>\r\n\r\n\r\n\r\n          </Box>\r\n          <Box display=\"flex\" justifyContent=\"end\" mt=\"20px\">\r\n            <Button onClick={handleSubmit} type=\"submit\" variant=\"contained\">\r\n              Create Project\r\n            </Button >\r\n          </Box>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n\r\n    {button}\r\n\r\n    </Box>\r\n    \r\n    }\r\n\r\n    {currentUser && currentUser.role !== \"Admin\" && developers && \r\n\r\n    <Box m=\"20px\">\r\n    <Header title=\"No access\" subtitle=\"Only admins can add projects.\" />\r\n\r\n    </Box>\r\n\r\n    \r\n\r\n    }\r\n\r\n    </>\r\n      \r\n    \r\n    \r\n  );\r\n}\r\n\r\nconst checkoutSchema = yup.object().shape({\r\n  title: yup.string().required(\"required\"),\r\n  description: yup.string().required(\"required\"),\r\n  \r\n  /*email: yup.string().email(\"invalid email\").required(\"required\"),\r\n  contact: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(\"required\"),\r\n  address1: yup.string().required(\"required\"),\r\n  address2: yup.string().required(\"required\"),\r\n  */\r\n});\r\nconst initialValues = {\r\n  title: \"\",\r\n  description: \"\",\r\n  priority: \"Low\",\r\n  developers: [],\r\n  projectManager: \"\"\r\n};\r\n\r\nexport default AddProject;","import React, { useEffect, useState } from \"react\";\nimport { CssBaseline, ThemeProvider } from \"@mui/material\";\n\nimport { ColorModeContext, useMode } from \"./theme\";\n\nimport Topbar from \"./scenes/global/Topbar\"\nimport Sidebar from \"./scenes/global/Sidebar\";\nimport Dashboard from \"./scenes/dashboard/dashboard\";\nimport Team from \"./scenes/team/index\";\n\n\nimport Login from \"./components/Authentication/Login\";\nimport Signup from './components/Authentication/Signup';\nimport Account from './components/Authentication/Account';\nimport Welcome from \"./components/Authentication/Welcome\";\n\nimport HomeSignedIn from \"./components/Home/home\";\n\nimport Issues2 from \"./scenes/issues/index\"\nimport Projects from \"./scenes/projects/index\"\n\nimport { Route, Routes, Switch } from 'react-router-dom';\nimport { AuthContextProvider } from './context/AuthContext';\nimport ProtectedRoute from \"./components/ProtectedRoute\";\n\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [theme, colorMode] = useMode ();\n  const [isSidebar, setIsSidebar] = useState(true);\n  const [emailApp, setEmailApp] = useState (\"\")\n  const [currentUser, setCurrentUser] = useState ()\n\n  const auth = getAuth();\n\n  useEffect(() => {\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        \n        setCurrentUser (user)\n\n      } else {\n\n        setCurrentUser (undefined)\n\n      }\n    }); \n  }, [currentUser]);\n\n  return ( \n    <ColorModeContext.Provider value={colorMode}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline/>\n\n          <div className=\"app\">\n\n          <Login setEmailApp={setEmailApp} />\n          \n          \n          \n\n          </div>\n\n      </ThemeProvider>\n    </ColorModeContext.Provider>\n  );\n}\n\n\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nconst root = ReactDOM.createRoot (document.getElementById(\"root\"))\r\n\r\nroot.render (\r\n<HashRouter>\r\n  <App> \r\n  </App>\r\n  \r\n</HashRouter>);"],"sourceRoot":""}